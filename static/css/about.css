@charset "UTF-8";
/* ==========================================================================
   Index of scss files
   ========================================================================== */
/* Normalize
   ========================================================================== 
@import "node_modules/normalize.css/normalize";*/
/* Breakpoint
   ========================================================================== */
/* Variables (colors, sizes, fonts)
   ========================================================================== */
/* ==========================================================================
   Variables: colors, sizes, fonts
   ========================================================================== */
/* Colors
========================================================================== */
/* Sizes
========================================================================== */
/* Breakpoints
========================================================================== */
/* Fonts
========================================================================== */
/* Flex Helpers
   ========================================================================== */
/* Mixins
   ========================================================================== */
/* ==========================================================================
   Mixins
   ========================================================================== */
/* 1. Font smoothing
========================================================================== */
/* Better font-rendering on OSX
   https://maximilianhoffmann.com/posts/better-font-rendering-on-osx
*/
/* Extends
   ========================================================================== */
/* ==========================================================================
   Extends
   ========================================================================== */
/* Place for helper classes to use for extending other modules.
   ========================================================================== */
/* Helpers (common used classes: buttons, clearfix...)
   ========================================================================== */
/* ==========================================================================
   Helpers
   ========================================================================== */
/* Layout oriented helpers
   ========================================================================== */
/* Clearfixes
   ========================================================================== */
/* Bxslider
   ========================================================================== */
/**
 * BxSlider v4.1.2 - Fully loaded, responsive content slider
 * http://bxslider.com
 *
 * Written by: Steven Wanderski, 2014
 * http://stevenwanderski.com
 * (while drinking Belgian ales and listening to jazz)
 *
 * CEO and founder of bxCreative, LTD
 * http://bxcreative.com
 */
/** RESET AND LAYOUT
===================================*/
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700|Lora:400italic|Raleway:400,600,800,700|Karla);
.bx-wrapper {
  position: relative;
  margin: 0 auto 40px;
  padding: 0;
  *zoom: 1; }

.bx-wrapper img {
  max-width: 100%;
  display: block; }

/** THEME
===================================*/
.bx-wrapper .bx-viewport {
  background: #fff;
  /*fix other elements on the page moving (on Chrome)*/
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  -ms-transform: translatez(0);
  -o-transform: translatez(0);
  transform: translatez(0); }

.bx-wrapper .bx-pager,
.bx-wrapper .bx-controls-auto {
  position: absolute;
  bottom: -30px;
  width: 100%; }

/* LOADER */
.bx-wrapper .bx-loading {
  min-height: 50px;
  background: url(images/bx_loader.gif) center center no-repeat #fff;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2000; }

/* PAGER */
.bx-wrapper .bx-pager {
  font-size: .85em;
  font-family: Arial;
  font-weight: bold;
  color: #666;
  padding-top: 20px; }

.bx-wrapper .bx-pager .bx-pager-item,
.bx-wrapper .bx-controls-auto .bx-controls-auto-item {
  display: inline-block;
  *zoom: 1;
  *display: inline; }

.bx-wrapper .bx-pager.bx-default-pager a {
  background: #666;
  text-indent: -9999px;
  display: block;
  width: 10px;
  height: 10px;
  margin: 0 5px;
  outline: 0;
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px; }

.bx-wrapper .bx-pager.bx-default-pager a:hover,
.bx-wrapper .bx-pager.bx-default-pager a.active {
  background: #000; }

/* DIRECTION CONTROLS (NEXT / PREV) */
.bx-wrapper .bx-prev {
  left: 10px;
  background: url(images/controls.png) no-repeat 0 -32px; }

.bx-wrapper .bx-next {
  right: 10px;
  background: url(images/controls.png) no-repeat -43px -32px; }

.bx-wrapper .bx-prev:hover {
  background-position: 0 0; }

.bx-wrapper .bx-next:hover {
  background-position: -43px 0; }

.bx-wrapper .bx-controls-direction a {
  position: absolute;
  top: 50%;
  margin-top: -16px;
  outline: 0;
  width: 32px;
  height: 32px;
  text-indent: -9999px;
  z-index: 9999; }

.bx-wrapper .bx-controls-direction a.disabled {
  display: none; }

/* AUTO CONTROLS (START / STOP) */
.bx-wrapper .bx-controls-auto {
  text-align: center; }

.bx-wrapper .bx-controls-auto .bx-start {
  display: block;
  text-indent: -9999px;
  width: 10px;
  height: 11px;
  outline: 0;
  background: url(images/controls.png) -86px -11px no-repeat;
  margin: 0 3px; }

.bx-wrapper .bx-controls-auto .bx-start:hover,
.bx-wrapper .bx-controls-auto .bx-start.active {
  background-position: -86px 0; }

.bx-wrapper .bx-controls-auto .bx-stop {
  display: block;
  text-indent: -9999px;
  width: 9px;
  height: 11px;
  outline: 0;
  background: url(images/controls.png) -86px -44px no-repeat;
  margin: 0 3px; }

.bx-wrapper .bx-controls-auto .bx-stop:hover,
.bx-wrapper .bx-controls-auto .bx-stop.active {
  background-position: -86px -33px; }

/* PAGER WITH AUTO-CONTROLS HYBRID LAYOUT */
.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-pager {
  text-align: left;
  width: 80%; }

.bx-wrapper .bx-controls.bx-has-controls-auto.bx-has-pager .bx-controls-auto {
  right: 0;
  width: 35px; }

/* IMAGE CAPTIONS */
.bx-wrapper .bx-caption {
  position: absolute;
  bottom: 0;
  left: 0;
  background: #666\9;
  background: rgba(80, 80, 80, 0.75);
  width: 100%; }

.bx-wrapper .bx-caption span {
  color: #fff;
  font-family: Arial;
  display: block;
  font-size: .85em;
  padding: 10px; }

/* Fonts
   ========================================================================== */
/* ==========================================================================
   Fonts
   ========================================================================== */
/* Typograpy
   ========================================================================== */
/* ==========================================================================
   Typography
   ========================================================================== */
/* Base
   ========================================================================== */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body {
  font-family: "Roboto", Arial, sans-serif;
  font-size: 16px;
  line-height: 1.4;
  color: #404040; }

/* Global Typography
   ========================================================================== */
a {
  text-decoration: none;
  color: #404040; }
  a:hover {
    text-decoration: none; }
  a:focus {
    outline: none; }

/* Forms
   ========================================================================== */
/* ==========================================================================
   Forms
   ========================================================================== */
.form fieldset {
  margin: 0;
  padding: 0;
  border: 0; }

.form input:focus,
.form textarea:focus {
  outline: none; }

.form *::-ms-clear {
  display: none; }

/* contact form in footer */
.form-contact {
  position: relative;
  width: 100%;
  padding-top: 35px; }
  .form-contact--name {
    border: 0;
    border-left: 1px solid #7b7b7c;
    border-right: 1px solid #7b7b7c; }
  .form-contact--email {
    border: 0;
    border-right: 1px solid #7b7b7c; }
  .form-contact--name, .form-contact--email {
    width: 50%;
    height: 48px;
    margin: 0;
    padding: 10px 0 0 21px;
    border-top: 1px solid #7b7b7c;
    color: #7b7b7c;
    background: transparent; }
  .form-contact--message {
    width: 100%;
    height: 97px;
    margin-bottom: 12px;
    padding: 15px 21px;
    border: 1px solid #7b7b7c;
    resize: none;
    color: #7b7b7c;
    background: transparent; }
  .form-contact--name:focus + label, .form-contact--email:focus + label, .form-contact--message:focus + label {
    color: transparent; }
    .form-contact--name:focus + label span, .form-contact--email:focus + label span, .form-contact--message:focus + label span {
      color: transparent; }
  .form-contact--label {
    position: absolute;
    padding: 15px 0 0 21px; }
    .form-contact--label span {
      color: #ffaf36; }
  .form-contact .valid {
    color: transparent; }
    .form-contact .valid span {
      color: transparent; }

.name-label {
  left: 0; }

.email-label {
  left: 50%; }

.message-label {
  left: 0;
  top: 33%; }

.basic-data {
  display: flex; }

@media (min-width: 300px) and (max-width: 639px) {
  .basic-data {
    flex-wrap: wrap; }
  .form-contact--message {
    margin: 10px 0; }
  .form-contact--email {
    margin-top: 10px; }
  .form-contact--name, .form-contact--email {
    width: 100%;
    border: 1px solid; }
  .email-label {
    left: 0;
    top: 29%; }
  .message-label {
    top: 48%; } }

/* Buttons
   ========================================================================== */
.btn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 150px;
  height: 50px;
  text-transform: uppercase;
  outline: none;
  border: 0;
  cursor: pointer; }
  .btn span {
    font: 700 13px/24px 'Releway'; }
  .btn--border {
    border: 3px solid #ffaf36;
    background: transparent;
    color: #ffaf36; }
  .btn--gold {
    background: #ffaf36; }

@media (min-width: 300px) and (max-width: 639px) {
  .btn {
    width: 100%; } }

/* header-top
   ========================================================================== */
.header {
  height: 836px;
  background: url(../img/Header1.jpg) 50% 100% no-repeat;
  background-size: cover; }
  .header > .inner {
    padding: 0 15px; }
  .header-top {
    display: flex;
    align-items: center;
    height: 98px; }
    .header-top:after {
      position: absolute;
      content: '';
      width: 100%;
      height: 1px;
      background: #7b7b7c;
      top: 97px;
      left: 0; }
  .header__logo {
    margin-right: 21px; }
  .header__contact {
    display: flex;
    align-items: center;
    width: 206px;
    margin: 13px 68px 0 0;
    padding-left: 22px;
    border-left: 1px solid #7b7b7c; }
    .header__contact:before {
      content: '\e809';
      font-family: "fontello";
      font-style: normal;
      font-weight: normal;
      font-size: 29px;
      color: #ffaf36; }
    .header__contact--number {
      font: 600 14px/24px 'Open Sans';
      padding-left: 10px;
      letter-spacing: -0.05em;
      color: #ffffff; }
  .header__menu {
    display: flex;
    align-items: center; }
    .header__menu__item {
      margin: 13px 22.5px 0;
      list-style: none; }
      .header__menu__item:last-child {
        margin-right: 0; }
      .header__menu__item--a {
        font: 700 14px/24px 'Open Sans';
        text-transform: uppercase;
        color: #ffaf36; }
  .header__bottom {
    padding-top: 220px;
    color: #ffffff; }
    .header__bottom__content {
      width: 520px; }
      .header__bottom__content--introduction {
        font: 600 16px/24px 'Raleway'; }
      .header__bottom__content--title {
        font: 800 60px 'Raleway'; }
      .header__bottom__content--text {
        font: 400 italic 15px/30px 'Lora';
        margin-bottom: 55px; }

/*Header in about*/
.header1 {
  height: 395px;
  background: url(../img/about/about.jpg) 50% 100% no-repeat;
  background-size: cover; }
  .header1 > .inner {
    padding: 0 15px; }

/*menu and burger */
.burger {
  position: absolute;
  right: 30px;
  top: 25px;
  height: 50px;
  width: 70px;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: transparent; }

.b1, .b2, .b3 {
  background: #ffaf36; }

.b1 {
  margin-top: 10px;
  width: 35px;
  height: 4px;
  transition: 0.3s; }

.b2 {
  margin-top: 10px;
  width: 35px;
  height: 4px;
  transition: 0.3s; }

.b3 {
  margin-top: 10px;
  width: 35px;
  height: 4px;
  transition: 0.3s; }

.active .b2 {
  display: none; }

.active .b1 {
  transform: translateY(7px) rotate(-45deg); }

.active .b3 {
  transform: translateY(-7px) rotate(45deg); }

.menu-block {
  overflow: hidden; }

/*media queries */
@media (min-width: 1001px) {
  .burger {
    display: none; }
  body {
    overflow-x: hidden; } }

@media (max-width: 1000px) {
  .header-top:after {
    background: transparent; }
  .header__nav {
    position: absolute;
    width: 220px;
    top: 100px;
    right: 0;
    transform: translateX(100vh);
    transition: 0.3s; }
  .header__menu {
    flex-direction: column;
    background: rgba(0, 0, 0, 0.85); }
    .header__menu__item {
      margin: 6px 0;
      width: 100%;
      text-align: center; } }

.menu-active {
  transform: translateX(0px); }

@media (max-width: 639px) {
  .header {
    height: 100vh; }
    .header__bottom {
      height: calc(100% - 100px);
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding-top: 0; }
      .header__bottom__content {
        width: auto; }
        .header__bottom__content--text {
          margin-bottom: 15px; }
    .header__nav {
      width: 100vw;
      height: 100vh;
      top: 0; }
    .header__menu {
      height: 100%;
      justify-content: center; }
      .header__menu__item--a {
        font-size: 33px; }
    .header__contact {
      display: none; }
  .burger {
    right: 0; } }

/* about section
   ========================================================================== */
.about--text {
  padding-top: 20px; }

.about__box {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 400px;
  margin-top: 76px;
  background: url(../img/about/woman.jpg) 50% 100% no-repeat;
  background-size: cover; }
  .about__box--inner {
    display: flex; }
  .about__box__item {
    margin: 0 15px;
    list-style: none; }

.about__content {
  display: flex;
  align-items: center;
  justify-content: space-between; }
  .about__content li {
    list-style: none; }
  .about__content__introduction {
    padding-bottom: 80px; }
    .about__content__introduction--title {
      font: 800 30px/24px 'Raleway';
      letter-spacing: 0.075em;
      text-transform: uppercase; }
    .about__content__introduction--subtitle {
      font: 400 italic 16px/30px 'Lora'; }
  .about__content__info {
    max-width: 645px; }
    .about__content__info--text {
      margin-bottom: 23px;
      font: 400 14px/28px 'Open Sans'; }

@media (max-width: 639px) {
  .about__content {
    flex-direction: column; }
    .about__content__introduction {
      padding: 30px; } }

/* Layout Definition (base)
   ========================================================================== */
/* ==========================================================================
   Layouts
   ========================================================================== */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

.inner {
  width: 1170px;
  margin: 0 auto;
  padding: 100px 15px;
  height: 100%; }

.img--inner {
  max-width: 100%; }
  .img--inner img {
    display: block;
    max-width: 100%;
    max-height: 100%; }

/*section title */
.shead {
  font: 800 30px/24px 'Raleway';
  letter-spacing: 0.075em;
  text-transform: uppercase; }

/*section subtitle */
.sbhead {
  font: 400 italic 16px/30px 'Lora'; }

/*section content */
.scontent {
  font: 400 14px/28px 'Open Sans'; }

/*triangle */
.triangle {
  position: relative; }
  .triangle:after {
    position: absolute;
    content: '';
    border-bottom: 70px solid #ffaf36;
    border-right: 67.5px solid transparent;
    border-left: 67.5px solid transparent;
    bottom: 0px;
    right: 15px; }
  .triangle:before {
    position: absolute;
    content: '';
    border-bottom: 100px solid #36a8ff;
    border-right: 80px solid transparent;
    border-left: 80px solid transparent;
    bottom: 0px;
    right: 5.7%; }

@media (max-width: 1169px) {
  .inner {
    width: auto; } }

@media (max-width: 1000px) {
  body {
    overflow-x: hidden; } }

@media (max-width: 639px) {
  .shead, .sbhead {
    text-align: center; }
  .triangle:before {
    border-bottom: 50px solid #36a8ff;
    border-right: 40px solid transparent;
    border-left: 40px solid transparent; }
  .triangle:after {
    border-bottom: 35px solid #ffaf36;
    border-right: 33.75px solid transparent;
    border-left: 33.75px solid transparent; } }

/* Footer
   ========================================================================== */
/* footer styles */
.footer {
  background: #2a2b2c;
  color: #7b7b7c; }
  .footer > .inner {
    padding: 84px 15px; }
  .footer__list {
    display: flex; }
    .footer__list--title {
      font: 700 18px/24px 'Raleway';
      text-transform: uppercase;
      color: #ffffff; }
    .footer__list__media {
      width: 390px;
      padding-top: 45px;
      padding: 45px 0 0 15px; }
      .footer__list__media--copy {
        font: 400 13px/24px 'Karla';
        letter-spacing: -0.05em; }
      .footer__list__media__box {
        display: flex;
        padding-top: 40px; }
        .footer__list__media__box--icon {
          display: flex;
          justify-content: center;
          align-items: center;
          width: 29px;
          height: 29px;
          margin-right: 10px;
          border: 1px solid; }
          .footer__list__media__box--icon i {
            color: #7b7b7c; }
            .footer__list__media__box--icon i:hover {
              color: #ffaf36; }
    .footer__list__navigation {
      width: 293px;
      padding-left: 15px; }
    .footer__list__contact {
      width: 487px;
      padding: 0 15px; }
  .footer li {
    list-style: none; }

.footer__menu {
  padding-top: 25px; }
  .footer__menu__item {
    max-width: 165px;
    border-bottom: 1px solid; }
    .footer__menu__item:hover {
      color: #ffaf36; }
      .footer__menu__item:hover a {
        color: inherit; }
    .footer__menu__item:last-child {
      border: 0; }
    .footer__menu__item:before {
      content: '\e808';
      font-family: "fontello";
      font-style: normal;
      font-weight: normal;
      color: #ffaf36; }
    .footer__menu__item--a {
      padding-left: 20px;
      font: 600 16px/39px 'Open Sans';
      letter-spacing: -0.075em;
      cursor: pointer;
      color: #7b7b7c; }

@media (max-width: 1000px) {
  .footer__list {
    flex-wrap: wrap; }
    .footer__list__media {
      width: 100%;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      order: 3; }
      .footer__list__media__box {
        padding-top: 20px; }
    .footer__list--title {
      text-align: center; }
    .footer__list__navigation {
      width: 100%;
      padding: 0; }
  .footer__menu__item {
    border: 0; } }

@media (min-width: 640px) and (max-width: 1000px) {
  .footer > .inner {
    padding: 42px 15px; }
  .footer__list {
    flex-wrap: wrap; }
    .footer__list__contact {
      width: 100%;
      padding: 42px 0; }
  .footer__menu {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around; } }

@media (min-width: 300px) and (max-width: 639px) {
  .footer__list__media {
    padding-top: 24px; }
  .footer__menu {
    padding: 25px 15px; } }

/* Layout Components
   ========================================================================== */
/* ==========================================================================
   Components
   ========================================================================== */
/* Fontello
   ========================================================================== */
@font-face {
  font-family: 'fontello';
  src: url("../fonts/fontello.eot?58592908");
  src: url("../fonts/fontello.eot?58592908#iefix") format("embedded-opentype"), url("../fonts/fontello.woff2?58592908") format("woff2"), url("../fonts/fontello.woff?58592908") format("woff"), url("../fonts/fontello.ttf?58592908") format("truetype"), url("../fonts/fontello.svg?58592908#fontello") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'fontello';
    src: url('../font/fontello.svg?58592908#fontello') format('svg');
  }
}
*/
[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ }

.icon-key:before {
  content: '\e800'; }

/* '' */
.icon-mobile:before {
  content: '\e801'; }

/* '' */
.icon-mail:before {
  content: '\e802'; }

/* '' */
.icon-search:before {
  content: '\e803'; }

/* '' */
.icon-gplus:before {
  content: '\e804'; }

/* '' */
.icon-facebook:before {
  content: '\e805'; }

/* '' */
.icon-twitter:before {
  content: '\e806'; }

/* '' */
.icon-linkedin:before {
  content: '\e807'; }

/* '' */
.icon-right-dir:before {
  content: '\e808'; }

/* '' */
.icon-phone:before {
  content: '\e809'; }

/* '' */
.icon-rocket:before {
  content: '\e80a'; }

/* '' */
.icon-clock:before {
  content: '\e80b'; }

/* '' */
.icon-chat:before {
  content: '\e80c'; }

/* '' */
.icon-eye:before {
  content: '\e80d'; }

/* '' */
.icon-chat-1:before {
  content: '\e80e'; }

/* '' */
.icon-chart-line:before {
  content: '\e80f'; }

/* '' */
.icon-location:before {
  content: '\e810'; }

/* '' */
.icon-ok:before {
  content: '\e811'; }

/* '' */
.icon-right:before {
  content: '\e812'; }

/* '' */
/* Vendor CSS
   ========================================================================== */
/* ==========================================================================
   Vendor
   ========================================================================== */
/* owlCarousel
   ========================================================================== */
/* Media Queries
   ========================================================================== */
/* ==========================================================================
   Media Queries
   ========================================================================== */
/* Breakpoints link for JS
   https://www.lullabot.com/articles/importing-css-breakpoints-into-javascript/ 
*/
body:before {
  content: "smartphone";
  display: none; }

@media (min-width: 700px) {
  body:before {
    content: "tablet"; } }

@media (min-width: 1100px) {
  body:before {
    content: "desktop"; } }

/* Desktop
   ========================================================================== */
/* Print Styles
   ========================================================================== */
/* ==========================================================================
   Print Styles
   ========================================================================== */

/*# sourceMappingURL=data:application/json;base64, */
